@model IEnumerable<Capstone.Models.Location>

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="map" style="position: fixed; overflow: visible; height: 600px; width: 600px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@Capstone.Services.APIKeys.GOOGLE_API_KEY&callback=initMap&libraries=&v=weekly"
        defer></script>
<script>

    let myLats = [];
    let myLongs = [];
    console.log(mylats);
    console.log(myLongs);
</script>
@foreach (var item in Model)
{
    <script>
            myLats.push(@item.Latitude)
            myLongs.push(@item.Longitude)
    </script>
}


<script>

    let map;


    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: @Model.First().Latitude, lng: @Model.First().Longitude },
            zoom: 10,
        });


        console.log(myLats);
        console.log(myLongs);


            for (let i = 0; i < myLats.length; i++) {
                new google.maps.Marker({
                    position: { lat: myLats[i], lng: myLongs[i] },
                    map: map,
            })
        }

    }

</script>

<table class="table" style="color: black; background-color: white; border: 1px solid black;">
    <thead>
        <tr class="table-success">

            <th scope="row">
                @Html.DisplayNameFor(model => model.FirstName)

            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.LastName)

            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.Address)

            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>

            <th scope="row">
                @Html.DisplayNameFor(model => model.Longitude)
            </th>
            <th scope="row">
                @Html.DisplayNameFor(model => model.Latitude)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


